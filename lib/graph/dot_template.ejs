<%_ function HtmlId(id) {
  return 'HREF="remove_me_url" ID="' + id + '"';
} %>
<%_ function TEXT(str) {
  if (str === '')
    return '';
  str = str.replace(/]/, '&#93;');
  return '<FONT>' + str + '</FONT>';
} %>
digraph {
  graph [
    rankdir = "LR"
  ];
  node [
    fontsize = "16"
    fontname = "helvetica, open-sans"
    shape = "plaintext"
  ];
  edge [
  ];
  ranksep = 2.0
<%_ _.each(graph._getNodes(), node => { -%>
  <%_ var type = graph._getTypeById(node.id); -%>
  "<%- type.name %>" [
    id = "<%- node.id %>"
    label = <<TABLE ALIGN="LEFT" BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="5">
      <TR>
        <TD <%- HtmlId(`TYPE_TITLE::${type.name}`) %> ><B><%- type.name %></B></TD>
      </TR>
      <%_ _.each(type.fields, field => { -%>
      <TR>
        <TD <%- HtmlId(`FIELD::${type.name}::${field.name}`) %>
          ALIGN="LEFT" PORT="<%- field.name %>">
          <TABLE CELLPADDING="0" CELLSPACING="0" BORDER="0">
            <TR>
              <%_ var fieldType = graph._getFieldType(field).name; -%>
              <%_ let [left, right] = stringifyWrappers(field.typeWrappers); -%>
              <TD ALIGN="LEFT"><%- field.name %><FONT>  </FONT></TD>
              <TD ALIGN="RIGHT"><%- TEXT(left) %><%- fieldType %><%- TEXT(right) %></TD>
            </TR>
          </TABLE>
        </TD>
      </TR>
      <%_ }); -%>
      <%_ _.each(type.possibleTypes, possibleType => { -%>
      <TR>
        <TD <%- HtmlId(`POSSIBLE_TYPE::${type.name}::${possibleType}`) %>
          ALIGN="LEFT" PORT="<%- possibleType %>"><%- possibleType %></TD>
      </TR>
      <%_ }); -%>
      <%_ _.each(type.derivedTypes, derivedType => { -%>
      <TR>
        <TD <%- HtmlId(`DERIVED_TYPE::${type.name}::${derivedType}`) %>
          ALIGN="LEFT" PORT="<%- derivedType %>"><%- derivedType %></TD>
      </TR>
      <%_ }); -%>
    </TABLE>>
  ];
  <%_ _(node.edges).filter({connectionType: 'field'}).each(edge => { -%>
  "<%- type.name %>":"<%- edge.fromPort %>" -> "<%- edge.to %>" [
    id = "<%- edge.id %>"
    label = "<%- type.name %>:<%- edge.fromPort %>"
  ]
  <%_ }); -%>
  <%_ _(node.edges).filter({connectionType: 'possible_type'}).each(edge => { -%>
  "<%- type.name %>":"<%- edge.fromPort %>" -> "<%- edge.to %>" [
    id = "<%- edge.id %>"
    style = "dashed"
  ]
  <%_ }); -%>
  <%_ _(node.edges).filter({connectionType: 'derived_type'}).each(edge => { -%>
  "<%- type.name %>":"<%- edge.fromPort %>" -> "<%- edge.to %>" [
    id = "<%- edge.id %>"
    style = "dotted"
  ]
  <%_ }); -%>
<%_ }); -%>
}
